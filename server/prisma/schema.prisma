generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:localpassword@localhost:5432/mydb"
}

model User {
  id            String     @id @default(uuid()) @db.Uuid
  email         String     @unique
  password      String
  name          String
  surname       String
  age           Int
  country       String
  phone         String
  address       String
  
  disponibility String
  education     String
  courses       String
  ingressDate   Int
  program       String
  subsidiary    String
  dni           String @unique

  role          Role       @default(USER)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  
  Activity      Activity[]
  sessions      Session[]
  Request       Request[]
}

model Activity {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  description String
  creatorId   String   @db.Uuid
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  startDate   DateTime
  endDate     DateTime
  location    String?
  creator     User     @relation(fields: [creatorId], references: [id])
}

model Session {
  id        String   @id @default(uuid()) @db.Uuid
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
}

model Program {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  description  String
  creationDate DateTime  @default(now())
  Request      Request[]
}

model Request {
  id           Int           @id @default(autoincrement())
  subsidiary   String
  country      String
  programId    Int
  startDate    DateTime      
  endDate      DateTime     
  status       RequestStatus @default(WAITING)
  program      Program       @relation(fields: [programId], references: [id])
  creationDate DateTime      @default(now())
  userId       String        @db.Uuid
  user         User          @relation(fields: [userId], references: [id])
}

enum RequestStatus {
  WAITING
  REJECTED
  APPROVED
}

enum Role {
  ADMIN
  USER
}
